### How To: Keep Lamdba warm for low latency ###

Why?
Lambdas have to be loaded by AWS before execution. This takes time if they haven't been used recently and are
not in AWS' cache and adds to latency for customers. To solve this you can call your unique lambda's every 5 minutes to
keep them in the cache and warm


Step 1: Install serverless plugin to do this for us
npm install --save-dev serverless-plugin-warmup
Details of plugin at: https://github.com/FidelLimited/serverless-plugin-warmup


Step 2: Setup plugin configuration in serverless.yml
Add Plugin to serverless.yml
plugins:
  - serverless-plugin-warmup

Update to run on specific stage under custom:
  warmPostDeploy:
    dev: false
    gamma: false
    prod: true
  warmup:
    default: prod
    prewarm: ${self:custom.warmPostDeploy.${self:provider.stage}}

Step 8: Setup GIT IGNORE to prevent unnecessary files getting checked in from plugin
Modify .gitignore file
Add Content:
    # Warm up directory auto generated by Serverless Plugin upon build
    _warmup/


Step 3: Update app to end early and not process express handler for these warm up requests to not waste
processing time and save costs.
See src/server.js file.
  module.exports.handler = function (event, context, callback) {
    // Immediate response for WarmUP plugin to save costs/resourcing
    if (event.source === 'serverless-plugin-warmup') {
      logger.info('Received Lambda WarmUp Call');
      return callback(null, 'Lambda is warm');
    }
    return serverless(app)(event, context, callback);
  };
